- name: Setup environment
  hosts: aws_ec2
  remote_user: ubuntu

  tasks:
    - include_vars:
        dir: config
        extensions:
          - 'yaml'
        ignore_unknown_extensions: True

    - name: Wait for dpkg frontend lock
      become: yes
      shell:  while sudo fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do sleep 5; done;

    - name: Wait for dpkg lock
      become: yes
      shell:  while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 5; done;

    - name: Wait for apt-lists lock
      become: yes
      shell:  while sudo fuser /var/lib/apt/lists/lock >/dev/null 2>&1; do sleep 5; done;

    - name: Add neovim repository
      become: yes
      become_user: root
      apt_repository:
        repo: 'ppa:neovim-ppa/stable'
        state: present

    - name: Install utilites
      become: yes
      become_user: root
      apt:
        pkg:
          - git
          - net-tools
          - neovim
          - rsync
          - stow

    - name: Clone server repo
      become: yes
      become_user: root
      git:
        repo: "{{ server_repo.remote }}"
        dest: "{{ server_repo.dest }}"
        version: "{{ server_repo.version }}"
        force: yes

    - name: Install server
      become: yes
      become_user: root
      shell: |
        chmod +x menu.sh
        chmod +x lib/*.sh
        lib/install.sh -u "{{ server.user_password }}" -w "{{ server.world_name }}" -p "{{ server.password }}" -d "{{ server.display_name }}"
      args:
        chdir: "{{ server_repo.dest }}"
        creates: /home/steam

    - name: Mount goofys
      include: environment/goofys.yaml

    - name: Restore initial world from local machine
      include: initial-world-local.yaml
      when: server.initial_world_local_path != ''

    - name: Restore initial world from s3
      include: initial-world-s3.yaml
      when: server.initial_world_s3_path != ''

    - name: Create backups crontab
      become: yes
      become_user: root
      cron:
        name: "Backup world"
        minute: "{{ backups.minute }}"
        hour: "{{ backups.hour }}"
        weekday: "{{ backups.weekday }}"
        user: root
        job: "cd {{ server_repo.dest }} && lib/backup.sh --backup_path /mnt/goofys/{{ goofys.bucket }}/{{ server.world_name }}"
        state: present

